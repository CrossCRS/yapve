{"version":3,"sources":["data/config.js","data/strings.js","data/politics.js","data/questions.js","components/WelcomePanel.js","components/QuestionPanel.js","components/AxisBar.js","components/ResultsPanel.js","yapve.js","index.js","components/AxisBar.module.css","yapve.module.css","components/QuestionPanel.module.css"],"names":["config","name","description","strings","strongly_agree","agree","unsure","disagree","strongly_disagree","back","question","results","politics","axes","left","right","left_color","right_color","questions","effects","axis","value","WelcomePanel","props","replace","questionsCount","dangerouslySetInnerHTML","__html","Button","fluid","primary","onClick","onStart","QuestionPanel","Container","textAlign","className","styles","container","color","size","onSendAnswer","AxisBar","val","min","max","value_percent","maxValue","toFixed","style","display","flexDirection","Header","as","float","margin","axisData","bar_background","lineHeight","backgroundColor","data-percent","bar","width","value_left","value_right","ResultsPanel","Object","keys","scores","map","i","max_value","filter","a","YAPVE","useState","curQuestionIndex","setQuestionIndex","curPanel","setPanel","curScores","setScores","questions_count","length","useEffect","forEach","effect","Math","abs","console","log","showResults","header","content","text","Segment","Label","ribbon","questionIndex","onBack","multiplier","updatedScores","poweredby","disabled","href","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e71371a1.chunk.js","sourcesContent":["const config = {\n  name: 'YAPVE Sample',\n  description: `This is just a <strong>sample YAPVE quiz</strong><br />\n  There are <strong>%QUESTIONS_COUNT%</strong> questions.<br /><br />\n  Press <strong>START</strong> to... start.`\n};\n\nexport default config;","const strings = {\n  strongly_agree: 'Strongly Agree',\n  agree: 'Agree',\n  unsure: 'Unsure',\n  disagree: 'Disagree',\n  strongly_disagree: 'Strongly Disagree',\n  back: 'Back',\n  question: 'Question',\n\n  results: 'Results'\n};\n\nexport default strings;","const politics = {\n  axes: [\n    {\n      name: 'Economic', // Displayed and used for question effects\n      left: 'Equality',\n      right: 'Markets',\n      left_color: '#f44330', // Left progress bar color\n      right_color: '#008970' // Right progress bar color\n    },\n    {\n      name: 'Societal',\n      left: 'Tradition',\n      right: 'Progress',\n      left_color: '#8bc34a',\n      right_color: '#bf3cd5'\n    }\n  ]\n};\n\nexport default politics;","const questions = [\n  {\n    question: '+22 to Markets',\n    effects: [\n      { axis: 'Economic', value: 22 } // Strongly agree will give +value (right value), Strongly disagree will give -value (left value)\n    ]\n  },\n  {\n    question: '+30 to Markets',\n    effects: [\n      { axis: 'Economic', value: 30 }\n    ]\n  },\n  {\n    question: '+13 to Tradition',\n    effects: [\n      { axis: 'Societal', value: -13 }\n    ]\n  },\n  {\n    question: '+15 to Progress',\n    effects: [\n      { axis: 'Societal', value: 15 }\n    ]\n  }\n]\n\nexport default questions;","import React from 'react';\nimport { Button } from 'semantic-ui-react'\nimport config from '../data/config.js';\n\nfunction WelcomePanel(props) {\n  const description = config.description.replace('%QUESTIONS_COUNT%', props.questionsCount);\n\n  return (\n    <div>\n      <p dangerouslySetInnerHTML={{ __html: description }} />\n      <Button fluid primary onClick={props.onStart}>Start</Button>\n    </div>\n  )\n}\n\nexport default WelcomePanel;","import React from 'react';\nimport { Button, Container } from 'semantic-ui-react'\nimport strings from '../data/strings.js';\nimport styles from './QuestionPanel.module.css';\n\nfunction QuestionPanel(props) {\n  return (\n    <Container textAlign='center' className={styles.container} >\n      <p dangerouslySetInnerHTML={{ __html: props.question.question }} />\n      \n      <Button color='green' size='large' fluid onClick={() => props.onSendAnswer(1.0)}>{strings.strongly_agree}</Button>\n      <Button color='olive' size='large' fluid onClick={() => props.onSendAnswer(0.5)}>{strings.agree}</Button>\n      <Button size='large' fluid onClick={() => props.onSendAnswer(0.0)}>{strings.unsure}</Button>\n      <Button color='orange' size='large' fluid onClick={() => props.onSendAnswer(-0.5)}>{strings.disagree}</Button>\n      <Button color='red' size='large' fluid onClick={() => props.onSendAnswer(-1.0)}>{strings.strongly_disagree}</Button>\n\n      { //props.questionIndex !== 0 ?\n        //<Button className={styles.button_back} fluid basic onClick={props.onBack}>{strings.back}</Button>\n        //:\n        //<Button className={styles.button_back} fluid basic disabled>{strings.back}</Button>\n      }\n    </Container>\n  )\n}\n\nexport default QuestionPanel;","import React from 'react';\nimport { Header } from 'semantic-ui-react'\nimport styles from './AxisBar.module.css';\n\nfunction AxisBar(props) {\n  const normalize = (val, min, max) => {\n    return (val - min) / (max - min);\n  }\n  \n  const value_percent = (normalize(props.value, -props.maxValue, props.maxValue)*100).toFixed(1);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div>\n        <Header as='h2' style={{ float: 'left', margin: 0 }}>{props.axisData.left}</Header>\n        <Header as='h2' style={{ float: 'right', margin: 0 }}>{props.axisData.right}</Header>\n      </div>\n      <div className={styles.bar_background + ' ui big progress'} style={{lineHeight: '1', backgroundColor: props.axisData.right_color}} data-percent={value_percent}>\n        <div className={styles.bar + ' bar'} style={{width: value_percent+'%', backgroundColor: props.axisData.left_color}} />\n        <div className={styles.value_left}>{value_percent+'%'}</div>\n        <div className={styles.value_right}>{100-value_percent+'%'}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default AxisBar;","import React from 'react';\nimport { Container, Header } from 'semantic-ui-react'\nimport AxisBar from './AxisBar';\nimport politics from '../data/politics.js';\nimport strings from '../data/strings.js';\n\nfunction ResultsPanel(props) {\n  return (\n    <Container textAlign='center' >\n      <Header as='h1'>{strings.results}</Header>\n\n      { Object.keys(props.scores).map((axis, i) => (\n        <AxisBar value={props.scores[axis].value} maxValue={props.scores[axis].max_value} axisData={politics.axes.filter(a => a.name === axis)[0]} />\n      ))}\n    </Container>\n  )\n}\n\nexport default ResultsPanel;","import React, { useState, useEffect } from 'react'\nimport { Container, Header, Segment, Label } from 'semantic-ui-react'\nimport styles from './yapve.module.css';\nimport config from './data/config.js';\nimport strings from './data/strings.js';\n\nimport politics from './data/politics.js';\nimport questions from './data/questions.js';\n\nimport WelcomePanel from './components/WelcomePanel';\nimport QuestionPanel from './components/QuestionPanel';\nimport ResultsPanel from './components/ResultsPanel';\n\nfunction YAPVE() {\n  const [curQuestionIndex, setQuestionIndex] = useState(-1);\n  const [curPanel, setPanel] = useState(0); // 0 - WelcomePanel, 1 - QuestionPanel, 2 - ResultsPanel\n\n  //const [lastMultiplier, setLastMultiplier] = useState(0);\n  const [curScores, setScores] = useState({});\n\n  const questions_count = questions.length;\n\n  useEffect(() => {\n    let scores = {};\n\n    // Calculate max values for each axis and initialize user score\n    politics.axes.forEach((axis) => {\n      scores[axis.name] = {};\n      scores[axis.name].max_value = 0;\n      scores[axis.name].value = 0;\n\n      questions.forEach((question) => {\n        question.effects.filter(effect => effect.axis === axis.name).forEach((effect) => {\n          scores[axis.name].max_value += Math.abs(effect.value);\n        })\n      })\n    })\n\n    setScores(scores);\n  }, []);\n  console.log(politics.axes);\n  console.log(curScores);\n\n  const prevQuestion = () => {\n    if (curQuestionIndex > 0) {\n      // TODO: Revert score\n\n      setQuestionIndex(curQuestionIndex - 1);\n    }\n  }\n  const nextQuestion = (multiplier) => {\n    //setLastMultiplier(multiplier);\n\n    // Update scores\n    const updatedScores = curScores;\n    questions[curQuestionIndex].effects.forEach((effect) => {\n      updatedScores[effect.axis].value -= effect.value * multiplier;\n    })\n    setScores(updatedScores);\n    console.log(curScores);\n\n    if (curQuestionIndex < questions_count - 1) {\n      setQuestionIndex(curQuestionIndex + 1);\n    } else {\n      showResults();\n    }\n  }\n  const showResults = () => {\n    setPanel(2);\n  }\n\n  const onStart = () => {\n    setQuestionIndex(0);\n    setPanel(1);\n  }\n\n  return (\n    <div>\n      <Header as='h1' className={styles.header} content={config.name} textAlign='center' />\n\n      <Container text>\n        <Segment>\n        { curPanel === 1 ? <Label as='p' color='blue' ribbon>{strings.question} {curQuestionIndex+1} / {questions_count}</Label> : '' }\n        {\n          curPanel === 0 ?\n            <WelcomePanel questionsCount={questions_count} onStart={onStart} />\n          : curPanel === 1 ?\n            <QuestionPanel question={questions[curQuestionIndex]} questionIndex={curQuestionIndex} questionsCount={questions_count} onBack={prevQuestion} onSendAnswer={nextQuestion} />\n          : curPanel === 2 ?\n            <ResultsPanel scores={curScores} />\n          :\n            <WelcomePanel questionsCount={questions_count} onStart={onStart} />\n        }\n        </Segment>\n        <Header as='h5' className={styles.poweredby} textAlign='center' disabled>Powered by <a href='https://github.com/CrossCRS/yapve'>YAPVE</a></Header>\n      </Container>\n    </div>\n  );\n}\n\nexport default YAPVE;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport YAPVE from './yapve';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <YAPVE />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value_left\":\"AxisBar_value_left__2OcX-\",\"value_right\":\"AxisBar_value_right__lBGIB\",\"bar\":\"AxisBar_bar__4PvEh\",\"bar_background\":\"AxisBar_bar_background__1IK38\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"yapve_header__3r4xa\",\"poweredby\":\"yapve_poweredby__2YTOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QuestionPanel_container__2_4xY\",\"button_back\":\"QuestionPanel_button_back__2StKY\"};"],"sourceRoot":""}