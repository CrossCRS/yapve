{"version":3,"sources":["data/config.js","data/strings.js","logo.svg","data/politics.js","data/questions.js","components/WelcomePanel.jsx","components/QuestionPanel.jsx","components/AxisBarIcon.jsx","components/AxisBar.jsx","components/PoweredByLabel.jsx","components/ResultsPanel.jsx","yapve.jsx","index.jsx","components/AxisBar.module.css","components/QuestionPanel.module.css","yapve.module.css","components/AxisBarIcon.module.css","components/ResultsPanel.module.css","components/PoweredByLabel.module.css"],"names":["config","name","description","strings","strongly_agree","agree","unsure","disagree","strongly_disagree","back","question","results","export_to_image","restart","politics","axes","left","right","left_color","right_color","left_icon","right_icon","questions","effects","axis","value","WelcomePanel","questionsCount","onStart","replace","dangerouslySetInnerHTML","__html","Button","fluid","primary","size","onClick","QuestionPanel","questionIndex","onSendAnswer","onBack","Container","textAlign","className","styles","container","color","button_back","basic","disabled","AxisBarIcon","icon","alt","axis_icon","src","process","style","borderColor","AxisBar","val","min","max","maxValue","axisData","valuePercent","toFixed","axisbar","labels","Header","as","margin","bar_background","backgroundColor","data-percent","bar","width","value_left","value_right","PoweredByLabel","poweredby","href","defaultProps","undefined","ResultsPanel","scores","id","Object","keys","map","max_value","filter","a","Group","widths","element","document","querySelector","html2canvas","scrollWidth","height","scrollHeight","logging","then","canvas","ReImg","fromCanvas","downloadPng","data-html2canvas-ignore","window","location","reload","YAPVE","PANELS","useState","curQuestionIndex","setQuestionIndex","curPanel","setPanel","curScores","setScores","scoreHistory","setScoreHistory","QUESTIONS_COUNT","length","useEffect","forEach","effect","Math","abs","prevQuestion","scoreUpdate","scoreHistoryCopy","score","pop","popScoreHistory","updatedScores","nextQuestion","multiplier","push","addToScoreHistory","logo","text","Segment","Label","ribbon","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0cf5937c.chunk.js","sourcesContent":["const config = {\n  name: 'YAPVE Sample',\n  description: `This is just a <strong>sample YAPVE quiz</strong><br />\n  There are <strong>%QUESTIONS_COUNT%</strong> questions.<br /><br />\n  Press <strong>START</strong> to... start.`,\n};\n\nexport default config;\n","const strings = {\n  strongly_agree: 'Strongly Agree',\n  agree: 'Agree',\n  unsure: 'Unsure',\n  disagree: 'Disagree',\n  strongly_disagree: 'Strongly Disagree',\n  back: 'Back',\n  question: 'Question',\n\n  results: 'Results',\n  export_to_image: 'Export to image',\n  restart: 'Restart',\n};\n\nexport default strings;\n","export default __webpack_public_path__ + \"static/media/logo.08857fb6.svg\";","const politics = {\n  axes: [\n    {\n      name: 'Economic', // Displayed and used for question effects\n      left: 'Equality',\n      right: 'Markets',\n      left_color: '#f44330', // Progress bar color\n      right_color: '#008970',\n      left_icon: 'ball.svg', // Progress bar icon (found in public/img/icons/)\n      right_icon: 'ball.svg', // You can skip these properties to not display any icons.\n    },\n    {\n      name: 'Societal',\n      left: 'Tradition',\n      right: 'Progress',\n      left_color: '#8bc34a',\n      right_color: '#bf3cd5',\n      left_icon: 'ball.svg',\n      right_icon: 'ball.svg',\n    },\n  ],\n};\n\nexport default politics;\n","const questions = [\n  {\n    question: '+22 to Markets',\n    effects: [\n      { axis: 'Economic', value: 22 }, // Strongly agree will give +value (right value), Strongly disagree will give -value (left value)\n    ],\n  },\n  {\n    question: '+30 to Markets',\n    effects: [\n      { axis: 'Economic', value: 30 },\n    ],\n  },\n  {\n    question: '+13 to Tradition',\n    effects: [\n      { axis: 'Societal', value: -13 },\n    ],\n  },\n  {\n    question: '+15 to Progress',\n    effects: [\n      { axis: 'Societal', value: 15 },\n    ],\n  },\n];\n\nexport default questions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport config from '../data/config';\n\nfunction WelcomePanel({ questionsCount, onStart }) {\n  const description = config.description.replace('%QUESTIONS_COUNT%', questionsCount);\n\n  return (\n    <div>\n      <p dangerouslySetInnerHTML={{ __html: description }} />\n      <Button fluid primary size=\"big\" onClick={onStart}>Start</Button>\n    </div>\n  );\n}\n\nWelcomePanel.propTypes = {\n  questionsCount: PropTypes.number.isRequired,\n  onStart: PropTypes.func.isRequired,\n};\n\nexport default WelcomePanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Container } from 'semantic-ui-react';\nimport strings from '../data/strings';\nimport styles from './QuestionPanel.module.css';\n\nfunction QuestionPanel({ question, questionIndex, onSendAnswer, onBack }) {\n  return (\n    <Container textAlign=\"center\" className={styles.container}>\n      <p dangerouslySetInnerHTML={{ __html: question.question }} />\n\n      <Button color=\"green\" size=\"large\" fluid onClick={() => onSendAnswer(1.0)}>{strings.strongly_agree}</Button>\n      <Button color=\"olive\" size=\"large\" fluid onClick={() => onSendAnswer(0.5)}>{strings.agree}</Button>\n      <Button size=\"large\" fluid onClick={() => onSendAnswer(0.0)}>{strings.unsure}</Button>\n      <Button color=\"orange\" size=\"large\" fluid onClick={() => onSendAnswer(-0.5)}>{strings.disagree}</Button>\n      <Button color=\"red\" size=\"large\" fluid onClick={() => onSendAnswer(-1.0)}>{strings.strongly_disagree}</Button>\n\n      {\n        questionIndex !== 0\n          ? <Button className={styles.button_back} fluid basic onClick={onBack}>{strings.back}</Button>\n          : <Button className={styles.button_back} fluid basic disabled>{strings.back}</Button>\n      }\n    </Container>\n  );\n}\n\nQuestionPanel.propTypes = {\n  question: PropTypes.shape({\n    question: PropTypes.string.isRequired,\n  }).isRequired,\n\n  questionIndex: PropTypes.number.isRequired,\n\n  onSendAnswer: PropTypes.func.isRequired,\n  onBack: PropTypes.func.isRequired,\n};\n\nexport default QuestionPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './AxisBarIcon.module.css';\n\nfunction AxisBarIcon({ icon, alt, color }) {\n  return (\n    <img\n      className={styles.axis_icon}\n      src={`${process.env.PUBLIC_URL}/img/icons/${icon}`}\n      alt={alt}\n      style={{ borderColor: color }}\n    />\n  );\n}\n\nAxisBarIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default AxisBarIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Header } from 'semantic-ui-react';\nimport styles from './AxisBar.module.css';\n\nimport AxisBarIcon from './AxisBarIcon';\n\nfunction AxisBar({ value, maxValue, axisData }) {\n  const normalize = (val, min, max) => (val - min) / (max - min);\n\n  const valuePercent = (normalize(value, -maxValue, maxValue) * 100).toFixed(1);\n\n  return (\n    <div className={styles.axisbar}>\n      <div className={styles.labels}>\n        <Header as=\"h2\" style={{ margin: 0 }}>{axisData.left}</Header>\n        <Header as=\"h2\" style={{ margin: 0 }}>{axisData.right}</Header>\n      </div>\n      <div className={styles.axis}>\n        { axisData.left_icon && <AxisBarIcon icon={axisData.left_icon} color={axisData.left_color} alt={axisData.left} /> }\n        <div className={`${styles.bar_background} ui large progress`} style={{ backgroundColor: axisData.right_color }} data-percent={valuePercent}>\n          <div className={`${styles.bar} bar`} style={{ width: `${valuePercent}%`, backgroundColor: axisData.left_color }} />\n          <div className={`${styles.value} ${styles.value_left}`}>{`${valuePercent}%`}</div>\n          <div className={`${styles.value} ${styles.value_right}`}>{`${(100 - valuePercent).toFixed(1)}%`}</div>\n        </div>\n        { axisData.right_icon && <AxisBarIcon icon={axisData.right_icon} color={axisData.right_color} alt={axisData.right} /> }\n      </div>\n    </div>\n  );\n}\n\nAxisBar.propTypes = {\n  value: PropTypes.number.isRequired,\n  maxValue: PropTypes.number.isRequired,\n\n  axisData: PropTypes.shape({\n    left: PropTypes.string.isRequired,\n    right: PropTypes.string.isRequired,\n    left_icon: PropTypes.string.isRequired,\n    right_icon: PropTypes.string.isRequired,\n    left_color: PropTypes.string.isRequired,\n    right_color: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default AxisBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Header } from 'semantic-ui-react';\nimport styles from './PoweredByLabel.module.css';\n\nfunction PoweredByLabel({ textAlign, margin }) {\n  return (\n    <Header\n      as=\"h5\"\n      className={styles.poweredby}\n      textAlign={textAlign}\n      style={{ margin }}\n      disabled\n    >\n      Powered by <a href=\"https://github.com/CrossCRS/yapve\">YAPVE</a>\n    </Header>\n  );\n}\n\nPoweredByLabel.propTypes = {\n  textAlign: PropTypes.string,\n  margin: PropTypes.string,\n};\n\nPoweredByLabel.defaultProps = {\n  textAlign: undefined,\n  margin: undefined,\n};\n\nexport default PoweredByLabel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Container, Header } from 'semantic-ui-react';\nimport html2canvas from 'html2canvas';\nimport ReImg from 'reimg';\nimport AxisBar from './AxisBar';\nimport politics from '../data/politics';\nimport strings from '../data/strings';\nimport config from '../data/config';\nimport styles from './ResultsPanel.module.css';\n\nimport PoweredByLabel from './PoweredByLabel';\n\nfunction ResultsPanel({ scores }) {\n  const exportToImage = () => {\n    const element = document.querySelector('#canvas-target');\n\n    html2canvas(element, {\n      width: element.scrollWidth + 16, // Add small margin\n      height: element.scrollHeight,\n      logging: false,\n    }).then((canvas) => {\n      ReImg.ReImg.fromCanvas(canvas).downloadPng();\n    });\n  };\n\n  return (\n    <Container textAlign=\"center\">\n      <div id=\"canvas-target\">\n        <Header as=\"h1\">{strings.results}</Header>\n\n        {\n          Object.keys(scores).map((axis) => (\n            <AxisBar\n              key={axis}\n              value={scores[axis].value}\n              maxValue={scores[axis].max_value}\n              axisData={politics.axes.filter((a) => a.name === axis)[0]}\n            />\n          ))\n        }\n\n        <div className={styles.labels}>\n          <PoweredByLabel margin=\"0\" />\n          <Header as=\"h5\" style={{ margin: 0 }} disabled>{config.name}</Header>\n        </div>\n      </div>\n\n      <Button.Group widths=\"2\">\n        <Button primary onClick={exportToImage} data-html2canvas-ignore>{strings.export_to_image}</Button>\n        <Button onClick={() => window.location.reload()} data-html2canvas-ignore>{strings.restart}</Button>\n      </Button.Group>\n    </Container>\n  );\n}\n\nResultsPanel.propTypes = {\n  scores: PropTypes.objectOf(PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    max_value: PropTypes.number.isRequired,\n  })).isRequired,\n};\n\nexport default ResultsPanel;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Segment, Label } from 'semantic-ui-react';\nimport styles from './yapve.module.css';\nimport config from './data/config';\nimport strings from './data/strings';\n\nimport logo from './logo.svg';\n\nimport politics from './data/politics';\nimport questions from './data/questions';\n\nimport WelcomePanel from './components/WelcomePanel';\nimport QuestionPanel from './components/QuestionPanel';\nimport ResultsPanel from './components/ResultsPanel';\nimport PoweredByLabel from './components/PoweredByLabel';\n\nfunction YAPVE() {\n  const PANELS = {\n    WELCOME_PANEL: 0,\n    QUESTION_PANEL: 1,\n    RESULTS_PANEL: 2,\n  };\n\n  const [curQuestionIndex, setQuestionIndex] = useState(-1);\n  const [curPanel, setPanel] = useState(PANELS.WELCOME_PANEL);\n  const [curScores, setScores] = useState({});\n  const [scoreHistory, setScoreHistory] = useState([]);\n\n  const QUESTIONS_COUNT = questions.length;\n\n  useEffect(() => {\n    const scores = {};\n\n    // Calculate max values for each axis and initialize user score\n    politics.axes.forEach((axis) => {\n      scores[axis.name] = {};\n      scores[axis.name].max_value = 0;\n      scores[axis.name].value = 0;\n\n      questions.forEach((question) => {\n        question.effects.filter((effect) => effect.axis === axis.name).forEach((effect) => {\n          scores[axis.name].max_value += Math.abs(effect.value);\n        });\n      });\n    });\n\n    setScores(scores);\n  }, []);\n\n  const addToScoreHistory = (scoreUpdate) => {\n    setScoreHistory([...scoreHistory, scoreUpdate]);\n  };\n  const popScoreHistory = () => {\n    const scoreHistoryCopy = [...scoreHistory];\n    const score = scoreHistoryCopy.pop();\n    setScoreHistory(scoreHistoryCopy);\n    return score;\n  };\n\n  const prevQuestion = () => {\n    if (curQuestionIndex > 0) {\n      const scoreUpdate = popScoreHistory();\n\n      const updatedScores = curScores;\n      scoreUpdate.forEach((effect) => {\n        updatedScores[effect.axis].value += effect.value;\n      });\n\n      setScores(updatedScores);\n      setQuestionIndex(curQuestionIndex - 1);\n    }\n  };\n  const nextQuestion = (multiplier) => {\n    // Update scores\n    const updatedScores = curScores;\n    const scoreUpdate = [];\n    questions[curQuestionIndex].effects.forEach((effect) => {\n      updatedScores[effect.axis].value -= effect.value * multiplier;\n      scoreUpdate.push({ axis: effect.axis, value: effect.value * multiplier });\n    });\n    setScores(updatedScores);\n    addToScoreHistory(scoreUpdate);\n\n    if (curQuestionIndex < QUESTIONS_COUNT - 1) {\n      setQuestionIndex(curQuestionIndex + 1);\n    } else {\n      setPanel(PANELS.RESULTS_PANEL);\n    }\n  };\n\n  const onStart = () => {\n    setQuestionIndex(0);\n    setPanel(PANELS.QUESTION_PANEL);\n  };\n\n  const renderPanel = () => {\n    if (curPanel === PANELS.QUESTION_PANEL) {\n      return (\n        <QuestionPanel\n          question={questions[curQuestionIndex]}\n          questionIndex={curQuestionIndex}\n          questionsCount={QUESTIONS_COUNT}\n          onBack={prevQuestion}\n          onSendAnswer={nextQuestion}\n        />\n      );\n    }\n\n    if (curPanel === PANELS.RESULTS_PANEL) {\n      return <ResultsPanel scores={curScores} />;\n    }\n\n    return <WelcomePanel questionsCount={QUESTIONS_COUNT} onStart={onStart} />;\n  };\n\n  return (\n    <div>\n      <Container>\n        <img src={logo} alt={config.name} className={styles.logo} />\n      </Container>\n\n      <Container text>\n        <Segment>\n          { curPanel === PANELS.QUESTION_PANEL && <Label as=\"p\" color=\"blue\" ribbon>{strings.question} {curQuestionIndex + 1} / {QUESTIONS_COUNT}</Label> }\n\n          { renderPanel() }\n        </Segment>\n\n        <PoweredByLabel textAlign=\"center\" />\n      </Container>\n    </div>\n  );\n}\n\nexport default YAPVE;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport YAPVE from './yapve';\n\nReactDOM.render(\n  <React.StrictMode>\n    <YAPVE />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisbar\":\"AxisBar_axisbar__2RLiD\",\"labels\":\"AxisBar_labels__1tneF\",\"value\":\"AxisBar_value__1Iyrj\",\"value_left\":\"AxisBar_value_left__2OcX-\",\"value_right\":\"AxisBar_value_right__lBGIB\",\"bar\":\"AxisBar_bar__4PvEh\",\"bar_background\":\"AxisBar_bar_background__1IK38\",\"axis\":\"AxisBar_axis__1r9WB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QuestionPanel_container__2_4xY\",\"button_back\":\"QuestionPanel_button_back__2StKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"yapve_header__3r4xa\",\"logo\":\"yapve_logo__tSHhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axis_icon\":\"AxisBarIcon_axis_icon__iHUMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labels\":\"ResultsPanel_labels__3blKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poweredby\":\"PoweredByLabel_poweredby__2OEJY\"};"],"sourceRoot":""}