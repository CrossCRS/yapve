{"version":3,"sources":["data/config.js","logo.svg","data/politics.js","data/questions.js","components/core/Button.jsx","components/WelcomePanel.jsx","data/strings.js","components/QuestionPanel.jsx","components/AxisBarIcon.jsx","components/AxisBar.jsx","components/PoweredByLabel.jsx","components/ResultsPanel.jsx","yapve.jsx","index.jsx"],"names":["config","name","description","politics","axes","left","right","left_color","right_color","left_icon","right_icon","questions","question","effects","axis","value","Button","className","color","onClick","disabled","basic","children","other","btnClasses","classNames","type","defaultProps","undefined","WelcomePanel","questionsCount","onStart","replace","dangerouslySetInnerHTML","__html","strings","strongly_agree","agree","unsure","disagree","strongly_disagree","back","results","export_to_image","restart","QuestionPanel","questionIndex","onSendAnswer","onBack","AxisBarIcon","icon","alt","src","process","style","borderColor","AxisBar","val","min","max","maxValue","axisData","valuePercent","toFixed","leftWidth","rightWidth","width","backgroundColor","PoweredByLabel","href","ResultsPanel","scores","id","Object","keys","map","max_value","filter","a","element","document","querySelector","html2canvas","scrollWidth","height","scrollHeight","logging","then","canvas","ReImg","fromCanvas","downloadPng","data-html2canvas-ignore","window","location","reload","YAPVE","PANELS","useState","curQuestionIndex","setQuestionIndex","curPanel","setPanel","curScores","setScores","scoreHistory","setScoreHistory","QUESTIONS_COUNT","length","useEffect","forEach","effect","Math","abs","prevQuestion","scoreUpdate","scoreHistoryCopy","score","pop","popScoreHistory","updatedScores","nextQuestion","multiplier","push","addToScoreHistory","logo","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2db21f6c.chunk.js","sourcesContent":["const config = {\n  name: 'YAPVE Sample',\n  description: `This is just a <strong>sample YAPVE quiz</strong><br />\n  There are <strong>%QUESTIONS_COUNT%</strong> questions.<br /><br />\n  Press <strong>START</strong> to... start.`,\n};\n\nexport default config;\n","export default __webpack_public_path__ + \"static/media/logo.08857fb6.svg\";","const politics = {\n  axes: [\n    {\n      name: 'Economic', // Displayed and used for question effects\n      left: 'Equality',\n      right: 'Markets',\n      left_color: '#f44330', // Progress bar color\n      right_color: '#008970',\n      left_icon: 'ball.svg', // Progress bar icon (found in public/img/icons/)\n      right_icon: 'ball.svg', // You can skip these properties to not display any icons.\n    },\n    {\n      name: 'Societal',\n      left: 'Tradition',\n      right: 'Progress',\n      left_color: '#8bc34a',\n      right_color: '#bf3cd5',\n      left_icon: 'ball.svg',\n      right_icon: 'ball.svg',\n    },\n  ],\n};\n\nexport default politics;\n","const questions = [\n  {\n    question: '+22 to Markets',\n    effects: [\n      { axis: 'Economic', value: 22 }, // Strongly agree will give +value (right value), Strongly disagree will give -value (left value)\n    ],\n  },\n  {\n    question: '+30 to Markets',\n    effects: [\n      { axis: 'Economic', value: 30 },\n    ],\n  },\n  {\n    question: '+13 to Tradition',\n    effects: [\n      { axis: 'Societal', value: -13 },\n    ],\n  },\n  {\n    question: '+15 to Progress',\n    effects: [\n      { axis: 'Societal', value: 15 },\n    ],\n  },\n];\n\nexport default questions;\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nfunction Button({ className, color, onClick, disabled, basic, children, ...other }) {\n  const btnClasses = classNames({\n    'px-4 py-2 border border-transparent rounded-sm shadow-sm font-semibold': true,\n    'focus:outline-none focus:ring': !disabled,\n    'text-white': !disabled && !basic,\n    'bg-blue-500 hover:bg-blue-600 focus:ring-blue-200': !disabled && !basic && !color,\n\n    'bg-green-500 hover:bg-green-600 focus:ring-green-200': !disabled && !basic && color === 'green',\n    'bg-green-400 hover:bg-green-600 focus:ring-green-200': !disabled && !basic && color === 'lightgreen',\n    'bg-red-500 hover:bg-red-600 focus:ring-red-200': !disabled && !basic && color === 'red',\n    'bg-red-400 hover:bg-red-600 focus:ring-red-200': !disabled && !basic && color === 'lightred',\n\n    'bg-gray-100 text-gray-400 cursor-default focus:outline-none': disabled,\n    'bg-gray-200 hover:bg-gray-300 focus:ring-gray-100 text-gray-900': !disabled && !color && basic,\n    [`${className}`]: className,\n  });\n\n  return (\n    <button\n      type=\"button\"\n      className={btnClasses}\n      onClick={onClick}\n      {...other}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  basic: PropTypes.bool,\n  children: PropTypes.any,\n};\n\nButton.defaultProps = {\n  className: '',\n  color: '',\n  children: '',\n  onClick: undefined,\n  disabled: false,\n  basic: false,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport config from '../data/config';\n\nimport Button from './core/Button';\n\nfunction WelcomePanel({ questionsCount, onStart }) {\n  const description = config.description.replace('%QUESTIONS_COUNT%', questionsCount);\n\n  return (\n    <div>\n      <p dangerouslySetInnerHTML={{ __html: description }} />\n      <Button className=\"min-w-full mt-8\" onClick={onStart}>Start</Button>\n    </div>\n  );\n}\n\nWelcomePanel.propTypes = {\n  questionsCount: PropTypes.number.isRequired,\n  onStart: PropTypes.func.isRequired,\n};\n\nexport default WelcomePanel;\n","const strings = {\n  strongly_agree: 'Strongly Agree',\n  agree: 'Agree',\n  unsure: 'Unsure',\n  disagree: 'Disagree',\n  strongly_disagree: 'Strongly Disagree',\n  back: 'Back',\n  question: 'Question',\n\n  results: 'Results',\n  export_to_image: 'Export to image',\n  restart: 'Restart',\n};\n\nexport default strings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport strings from '../data/strings';\n\nimport Button from './core/Button';\n\nfunction QuestionPanel({ question, questionIndex, questionsCount, onSendAnswer, onBack }) {\n  return (\n    <div className=\"flex flex-col\">\n      <span className=\"text-center text-gray-500 text-sm\">{strings.question} {questionIndex + 1} / {questionsCount}</span>\n\n      <p className=\"text-center font-medium text-xl my-8\" dangerouslySetInnerHTML={{ __html: question.question }} />\n\n      <div className=\"flex flex-col mb-10\">\n        <Button color=\"green\" className=\"my-1\" onClick={() => onSendAnswer(1.0)}>{strings.strongly_agree}</Button>\n        <Button color=\"lightgreen\" className=\"my-1\" onClick={() => onSendAnswer(0.5)}>{strings.agree}</Button>\n        <Button basic className=\"my-1\" onClick={() => onSendAnswer(0.0)}>{strings.unsure}</Button>\n        <Button color=\"lightred\" className=\"my-1\" onClick={() => onSendAnswer(-0.5)}>{strings.disagree}</Button>\n        <Button color=\"red\" className=\"my-1\" onClick={() => onSendAnswer(-1.0)}>{strings.strongly_disagree}</Button>\n      </div>\n\n      {\n        questionIndex !== 0\n          ? <Button basic onClick={onBack}>{strings.back}</Button>\n          : <Button disabled>{strings.back}</Button>\n      }\n    </div>\n  );\n}\n\nQuestionPanel.propTypes = {\n  question: PropTypes.shape({\n    question: PropTypes.string.isRequired,\n  }).isRequired,\n\n  questionIndex: PropTypes.number.isRequired,\n  questionsCount: PropTypes.number.isRequired,\n\n  onSendAnswer: PropTypes.func.isRequired,\n  onBack: PropTypes.func.isRequired,\n};\n\nexport default QuestionPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AxisBarIcon({ icon, alt, color }) {\n  return (\n    <img\n      className=\"w-16 border-4 rounded-sm\"\n      src={`${process.env.PUBLIC_URL}/img/icons/${icon}`}\n      alt={alt}\n      style={{ borderColor: color }}\n    />\n  );\n}\n\nAxisBarIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default AxisBarIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AxisBarIcon from './AxisBarIcon';\n\nfunction AxisBar({ value, maxValue, axisData }) {\n  const normalize = (val, min, max) => (val - min) / (max - min);\n\n  const valuePercent = (normalize(value, -maxValue, maxValue) * 100).toFixed(1);\n\n  const leftWidth = valuePercent < 10 ? 10 : valuePercent;\n  const rightWidth = (100 - valuePercent) < 10 ? 10 : 100 - valuePercent;\n\n  return (\n    <div className=\"mb-6\">\n      <div className=\"flex justify-between\">\n        <h2 className=\"text-xl font-medium\">{axisData.left}</h2>\n        <h2 className=\"text-xl font-medium\">{axisData.right}</h2>\n      </div>\n      <div className=\"flex items-center\">\n        { axisData.left_icon && <AxisBarIcon icon={axisData.left_icon} color={axisData.left_color} alt={axisData.left} /> }\n        <div className=\"relative h-10 rounded-sm rounded-l-none mr-1 flex items-center justify-start\" style={{ width: `${leftWidth}%`, backgroundColor: axisData.left_color }}>\n          <div className=\"mx-1 font-medium\">{`${valuePercent}%`}</div>\n        </div>\n        <div className=\"relative h-10 rounded-sm rounded-r-none ml-1 flex items-center justify-end\" style={{ width: `${rightWidth}%`, backgroundColor: axisData.right_color }}>\n          <div className=\"mx-1 font-medium\">{`${(100 - valuePercent).toFixed(1)}%`}</div>\n        </div>\n        { axisData.right_icon && <AxisBarIcon icon={axisData.right_icon} color={axisData.right_color} alt={axisData.right} /> }\n      </div>\n    </div>\n  );\n}\n\nAxisBar.propTypes = {\n  value: PropTypes.number.isRequired,\n  maxValue: PropTypes.number.isRequired,\n\n  axisData: PropTypes.shape({\n    left: PropTypes.string.isRequired,\n    right: PropTypes.string.isRequired,\n    left_icon: PropTypes.string.isRequired,\n    right_icon: PropTypes.string.isRequired,\n    left_color: PropTypes.string.isRequired,\n    right_color: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default AxisBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PoweredByLabel({ className }) {\n  return (\n    <h5 className={`text-gray-700 font-light text-sm ${className}`}>\n      Powered by <a href=\"https://github.com/CrossCRS/yapve\">YAPVE</a>\n    </h5>\n  );\n}\n\nPoweredByLabel.propTypes = {\n  className: PropTypes.string,\n};\n\nPoweredByLabel.defaultProps = {\n  className: '',\n};\n\nexport default PoweredByLabel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport html2canvas from 'html2canvas';\nimport ReImg from 'reimg';\nimport AxisBar from './AxisBar';\nimport politics from '../data/politics';\nimport strings from '../data/strings';\nimport config from '../data/config';\n\nimport PoweredByLabel from './PoweredByLabel';\nimport Button from './core/Button';\n\nfunction ResultsPanel({ scores }) {\n  const exportToImage = () => {\n    const element = document.querySelector('#canvas-target');\n\n    html2canvas(element, {\n      width: element.scrollWidth, // Add small margin\n      height: element.scrollHeight,\n      logging: false,\n    }).then((canvas) => {\n      ReImg.ReImg.fromCanvas(canvas).downloadPng();\n    });\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <div id=\"canvas-target\">\n        <h1 className=\"text-4xl text-center mb-6\">{strings.results}</h1>\n\n        {\n          Object.keys(scores).map((axis) => (\n            <AxisBar\n              key={axis}\n              value={scores[axis].value}\n              maxValue={scores[axis].max_value}\n              axisData={politics.axes.filter((a) => a.name === axis)[0]}\n            />\n          ))\n        }\n\n        <div className=\"flex justify-between mb-6\">\n          <PoweredByLabel />\n          <h5 className=\"text-gray-700 font-light text-sm\" disabled>{config.name}</h5>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-2\">\n        <Button onClick={exportToImage} data-html2canvas-ignore>{strings.export_to_image}</Button>\n        <Button basic onClick={() => window.location.reload()} data-html2canvas-ignore>{strings.restart}</Button>\n      </div>\n    </div>\n  );\n}\n\nResultsPanel.propTypes = {\n  scores: PropTypes.objectOf(PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    max_value: PropTypes.number.isRequired,\n  })).isRequired,\n};\n\nexport default ResultsPanel;\n","import React, { useState, useEffect } from 'react';\nimport config from './data/config';\n\nimport logo from './logo.svg';\n\nimport politics from './data/politics';\nimport questions from './data/questions';\n\nimport WelcomePanel from './components/WelcomePanel';\nimport QuestionPanel from './components/QuestionPanel';\nimport ResultsPanel from './components/ResultsPanel';\nimport PoweredByLabel from './components/PoweredByLabel';\n\nfunction YAPVE() {\n  const PANELS = {\n    WELCOME_PANEL: 0,\n    QUESTION_PANEL: 1,\n    RESULTS_PANEL: 2,\n  };\n\n  const [curQuestionIndex, setQuestionIndex] = useState(-1);\n  const [curPanel, setPanel] = useState(PANELS.WELCOME_PANEL);\n  const [curScores, setScores] = useState({});\n  const [scoreHistory, setScoreHistory] = useState([]);\n\n  const QUESTIONS_COUNT = questions.length;\n\n  useEffect(() => {\n    const scores = {};\n\n    // Calculate max values for each axis and initialize user score\n    politics.axes.forEach((axis) => {\n      scores[axis.name] = {};\n      scores[axis.name].max_value = 0;\n      scores[axis.name].value = 0;\n\n      questions.forEach((question) => {\n        question.effects.filter((effect) => effect.axis === axis.name).forEach((effect) => {\n          scores[axis.name].max_value += Math.abs(effect.value);\n        });\n      });\n    });\n\n    setScores(scores);\n  }, []);\n\n  const addToScoreHistory = (scoreUpdate) => {\n    setScoreHistory([...scoreHistory, scoreUpdate]);\n  };\n  const popScoreHistory = () => {\n    const scoreHistoryCopy = [...scoreHistory];\n    const score = scoreHistoryCopy.pop();\n    setScoreHistory(scoreHistoryCopy);\n    return score;\n  };\n\n  const prevQuestion = () => {\n    if (curQuestionIndex > 0) {\n      const scoreUpdate = popScoreHistory();\n\n      const updatedScores = curScores;\n      scoreUpdate.forEach((effect) => {\n        updatedScores[effect.axis].value += effect.value;\n      });\n\n      setScores(updatedScores);\n      setQuestionIndex(curQuestionIndex - 1);\n    }\n  };\n  const nextQuestion = (multiplier) => {\n    // Update scores\n    const updatedScores = curScores;\n    const scoreUpdate = [];\n    questions[curQuestionIndex].effects.forEach((effect) => {\n      updatedScores[effect.axis].value -= effect.value * multiplier;\n      scoreUpdate.push({ axis: effect.axis, value: effect.value * multiplier });\n    });\n    setScores(updatedScores);\n    addToScoreHistory(scoreUpdate);\n\n    if (curQuestionIndex < QUESTIONS_COUNT - 1) {\n      setQuestionIndex(curQuestionIndex + 1);\n    } else {\n      setPanel(PANELS.RESULTS_PANEL);\n    }\n  };\n\n  const onStart = () => {\n    setQuestionIndex(0);\n    setPanel(PANELS.QUESTION_PANEL);\n  };\n\n  const renderPanel = () => {\n    if (curPanel === PANELS.QUESTION_PANEL) {\n      return (\n        <QuestionPanel\n          question={questions[curQuestionIndex]}\n          questionIndex={curQuestionIndex}\n          questionsCount={QUESTIONS_COUNT}\n          onBack={prevQuestion}\n          onSendAnswer={nextQuestion}\n        />\n      );\n    }\n\n    if (curPanel === PANELS.RESULTS_PANEL) {\n      return <ResultsPanel scores={curScores} />;\n    }\n\n    return <WelcomePanel questionsCount={QUESTIONS_COUNT} onStart={onStart} />;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 pt-6 font-body\">\n      <img src={logo} alt={config.name} className=\"mx-auto\" />\n\n      <div className=\"max-w-2xl mx-auto\">\n        <div className=\"bg-white py-6 px-6 my-6 shadow-lg rounded-md\">\n          { renderPanel() }\n        </div>\n\n        <PoweredByLabel className=\"text-center\" />\n      </div>\n    </div>\n  );\n}\n\nexport default YAPVE;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport YAPVE from './yapve';\n\nReactDOM.render(\n  <React.StrictMode>\n    <YAPVE />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}